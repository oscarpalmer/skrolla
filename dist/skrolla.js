/*!
 * Skrolla, v0.8.0 - for scrolling to specific places on a page!
 * https://github.com/oscarpalmer/skrolla
 * (c) Oscar Palm√©r, 2019, MIT @license
 */
const skrolla=function(){const t=window,e=t.document,l={hasCallback:!1,isActive:!1,options:{callback:null,offset:0}},o={easing(t){const e=2*t;if(e<1)return.5*e**3;const l=e-2;return.5*(l*l**2+2)},getDuration:t=>Math.ceil(Math.abs(t))},n={getElement:t=>e.getElementById(t)||e.body,getOffset:t=>t.getBoundingClientRect().top-l.options.offset,getTarget:t=>t.nodeType?t:"string"==typeof t?n.getElement(t):e.body},a={setOptions(t){null!=t&&"[object Object]"==={}.toString.call(t)&&(Object.keys(t).forEach(e=>{l.options[e]=t[e]}),null!=t.callback&&"function"==typeof t.callback&&(l.hasCallback=!0))},scrollTo(e,a){const s=t.pageYOffset,c=n.getTarget(e),r=n.getOffset(c),i=o.getDuration(r);let u=null;const g=e=>{null==u&&(u=e);const n=e-u,d=r*o.easing(n/i);return t.scrollTo(0,s+d),n<i?t.requestAnimationFrame(g):l.hasCallback?l.options.callback.call(c,c,a):null};t.requestAnimationFrame(g)}},s={addListeners(){const t=e.querySelectorAll("[data-skrolla]");Array.prototype.forEach.call(t,t=>{t.addEventListener("click",s.onClick)})},onClick(t){t.preventDefault();const{target:e}=t,l=e.getAttribute("data-skrolla");a.scrollTo(l,e)}},c=t=>{l.isActive||(l.isActive=!0,a.setOptions(t),s.addListeners())};return c.reload=()=>s.addListeners(),c.to=e=>{a.scrollTo(e,t)},c}();